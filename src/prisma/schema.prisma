generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int         @id @default(autoincrement())
  email        String      @unique
  first_name   String
  last_name    String
  password     String
  photo        String?
  is_verified  Boolean     @default(false)
  created_at   DateTime    @default(now())
  updated_at   DateTime    @updatedAt
  userToken    UserToken[]
  ratingsGiven Ratings[]
}

model UserToken {
  id         Int       @id @default(autoincrement())
  tokenType  tokenType
  token      String
  expiry     DateTime
  userId     Int
  updated_at DateTime  @updatedAt
  created_at DateTime  @default(now())
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, tokenType])
}

model Ratings {
  id           Int        @id @default(autoincrement())
  review       String     @db.VarChar(255)
  rating       Decimal    @db.Decimal(2, 1)
  userId       Int
  restaurantId Int
  ratingBy     User       @relation(fields: [userId], references: [id])
  Restaurant   Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)

  created_at DateTime @default(now())
}

model Restaurant {
  id            Int       @id @default(autoincrement())
  name          String    @db.VarChar(255)
  location      String    @db.VarChar(255)
  ratings       Ratings[]
  priceRange    Decimal   @db.Decimal(60, 2)
  averageRating Float     @default(0)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

enum tokenType {
  EMAIL_VERIFICATION
  PASSWORD_RESET
}
